01.			kakao open builder의 자연어 처리 알고리즘 기반 챗봇 발표 시작하겠습니다.
02.	

03. 동기&목적 		이 주제를 선정한 동기 및 목적을 설명하겠습니다.
			최근 가장 핫했던 이슈중 하나인 chat gpt를 사용하며 우리도 챗봇을 만들어보자 라고 생각했습니다
			그러다 학교 챗봇인 챗미를 알게되었는데 설문조사 결과와 같이
			우리학교 학생들도 존재를 잘 모르고 사용량이 많지 않다 느껴
			조금더 학생 친화적이고 접근성이 좋은 챗봇을 만들어보고자
			주제를 선정하게 되었습니다.


04. 제작목표		제작목표 입니다.
			저희가 목표한 것들은 가장먼저 접근성이 좋아야하고
			좀더 학생친화적인 용어와 정보들을 반영해야 했습니다.
			사용자가 대화하는 느낌을 받을 수 있도록 
			대화형 챗봇을 만들어보고자 하였고
			지속적인 업데이트가 쉽도록 만들어보고자 했습니다.


05 Dialogflow & kakao	사용자의 발화를 이해하기 위해서는 자연어 처리가 필요한데
			저희가 사용할 자연어처리 모델은 diaglogflow와 카카오 오픈빌더 둘중 하나 였습니다.
			각각의 장단점이 있었습니다.
			dialogflow는 구글에서 제공하는 모델로 context 최적화가 잘 되어있어 대화를 나누듯 사용자의 의도
			를 파악하는 대화형 챗봇을 만들기엔 적합했지만
			따로 앱을 제작하거나 페이지를 제작해야했기에 접근성에서 단점이 있고요
			카카오톡 오픈빌더는 dialogflow에서 가장 아쉬운 점인 접근성에 있어서 엄청난 강점을 가지고있고
			제공하는 응답 방식이 다양했기에 접근성에 중점을 두어 카카오톡 오픈빌더를
			활용하여 챗봇을 제작하게 되었습니다.


06. 서버			제작과정에 대해서 간단한 응답은 빌더 자체에서 처리하였고
			좀더 다양하고 실시간 반영이 필요한 정보는
			파이썬 언어를 사용하여 처리하였습니다
			이때 데이터를 저장하고 답변을 송출해주는 웹페이지와 외부에서 접속할 수 있도록 도와주는 서버가 필요하였는데
			파이썬 기반의 웹프레임 워크인 flask 와 네이버 클라우드에서 제공하는 서버를 이용하였습니다.


07. 카카오톡 빌더 화면	이것은 저희가 사용자에게 서비스를 제공하는 시나리오 관리 화면입니다.
			
    시나리오		우리 챗봇이 필요한 응답을 미리 생각하여 시나리오를 짯고 그에 맞는 동작을 위해 블록들을 추가해
			나갔습니다.

08. 패턴발화		블록들을 추가한 후 각 블록에 사용자의 발화와 유사도를 비교할 발화 패턴을 각 블록당 
			약 10~20개 내지로 추가하였습니다.

09. 파라미터		카카오톡 빌더 스스로 오타를 잡아내기는 하지만, 인식 못하는 경우를 대비하여 
			핵심 키워드의 동음이의어나 오타를 그룹화해논 파라미터 설정입니다.
			학교 위치와 같은 질문은 이런 파라미터값들이 필수적으로 필요하기에 데이터가 입력되지않으면
			사용자가 데이터를 입력할때까지 질문을 되묻는 설정도 이곳에서 할 수 있습니다.		

10. 응답관리		그렇게 일치도를 계산하여 해당 블록으로 접근하였을시 노출해주는 응답을 관리하는 창입니다.
			간단한 응답은 빌더 안에서 해결이 가능하고 그외의 복잡한 답변은 스킬을 사용하여 서버와
			연동하는 방식으로 답변을 제공하였습니다.

11. 시나리오 구성도	이와 같은 방식을 반복하여 29개의 시나리오를 작성하였고 그 내부적으로 약 800개 정도의 블록들을 만들어
			답변하도록 하였습니다.

			다음은 스킬데이터 부분 설명입니다.
12. 크롤링		날씨나 학식같이 실시간으로 업데이트 되는 정보를 취하기 위해서
			크롤링으로 홈페이지의 정보를 끌어와 제공하는 코드를 추가했습니다.


13. 표 제작 모듈		그리고 추가로 크롤링한 정보가 가독성이 떨어진다고 느껴진 부분에 있어서는
			자체적으로 표를 제작하여 가독성 있는 이미지로 제공하는 모듈을 따로 코딩하였습니다.


14. json			연락처나 건물정보같이 고정된 값이지만 정보의 양이 너무 많은 경우는 
			json파일을 통해 관리하는 코드를 추가하였고요 


15. 시나리오 추천		편의성제공과 응답률 향상을 위해서
			저희가 정보를 제공하지 못하는 질문이거나 의미없는 인삿말을 받았을 경우 저희가 가지고 있는
			블록중 5개정도를 랜덤으로 추천하는 코드를 추가해주었습니다.


16. 응답형식 변환		그리고 앞서 말씀드린 모든 코드는 결국 빌더와 연동이 필요한것이기 때문에 빌더가 요청하는
			형식으로 변환해주는 코드까지 작성하였습니다.


17. 업데이트		저희가 매칭하지 못한 발화나 정보에 있어서는 폴백구문으로 빠지게 되어
			그 발화가 무엇인지 파악을 할수 있고 시나리오 혹은 블록 추가를 통하여 업데이트를 진행하고있습니다.


18. 유사점		데모를 보여드리기 앞서 간단한 예시로
			처음에 목표했던 사용자의 발화를 이해하고 답변과정중 대화와 추천을 적절히 사용하는 점에서
			챗미와의 유사점이 있었고


19. 차별점		마찬가지로 목표했던 실제 학생들이 사용하는 단어와 정보를 적용한 점으로
			챗미보다는 조금더 학생친화적인 챗봇을 추구했다는 차별점을 두었습니다.


20. 데모 진행		저희의 작품을 챗미와 비교하며 보여드리도록 하겠습니다.
			질문은 앞서 설명드린 스킬데이터를 사용한 질문을 위주로 보여드리도록 하겠습니다.
			1. 안녕? - 간단한 인사와 함께 랜덤으로 5개의 서비스를 보여주는 기능입니다.
			2. 오늘 비오나?? - 간단히 날씨가 어떻게되냐는 발화가 아니라 데모를 진행한 후 학생들이 물어본 답변을
					패턴으로 추가하여 답변 가능하도록 하였습니다.
			3. 오늘 학식 뭐야? - 날마다 업데이트 되는 정보를 나타낼 수 있도록 노력했습니다.
			4. 생활관 성과평가 - 챗미같은 경우 2019년의 정보를 표로 만든후 그 이미지를 보여주는 방식을 선택한것
					같은데 저희는 홈페이지 정보를 받아와 스킬이 사용되면 이미지가 자동으로 업데이트 되는 방식을
					사용했습니다.
			5. 위치 - 되묻기 기능을 사용하여 필수 data인 건물의 이름을 묻도록 하였습니다.
			6. 전미과 전화번호가 뭐야? - 엔티티 설정이 안되있는 부분이 있지만 
						저장된 정보가 많기 때문에 이부분에서는 챗미가 강점이 있습니다.
			이상으로 발표를 마치겠습니다.
			